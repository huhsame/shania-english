// Next.js 예제: pages/index.js 또는 app/page.tsx 등에서 사용 가능

import { useEffect } from 'react';
import { useRouter } from 'next/router'; // Next.js 12 이하
// import { useSearchParams } from 'next/navigation'; // Next.js 13 이상

// 토큰 저장 함수
const saveToken = (token) => {
  if (token) {
    // localStorage에 토큰 저장
    localStorage.setItem('auth_token', token);
    
    // 또는 HttpOnly 쿠키가 필요한 경우, 서버 측에서 처리
    // 예: API 요청을 통해 서버에 토큰 쿠키 설정 요청
  }
};

// 인증 토큰으로 API 요청을 위한 Axios 인스턴스 설정 예시
const setupAuthAxios = () => {
  import axios from 'axios';
  
  const authAxios = axios.create({
    baseURL: process.env.NEXT_PUBLIC_API_URL,
  });
  
  // 요청 인터셉터 설정
  authAxios.interceptors.request.use(
    (config) => {
      const token = localStorage.getItem('auth_token');
      if (token) {
        config.headers.Authorization = `Bearer ${token}`;
      }
      return config;
    },
    (error) => Promise.reject(error)
  );
  
  return authAxios;
};

// 로그인 페이지에서의 구글 로그인 버튼 핸들러
const handleGoogleLogin = () => {
  // 백엔드 구글 인증 라우트로 리디렉션
  window.location.href = `${process.env.NEXT_PUBLIC_API_URL}/auth/google`;
};

// URL 파라미터에서 토큰 추출하는 컴포넌트
const GoogleAuthHandler = () => {
  const router = useRouter();
  // Next.js 13 이상은 아래와 같이 사용
  // const searchParams = useSearchParams();
  
  useEffect(() => {
    // URL에서 token 파라미터 추출
    const token = router.query.token;
    // Next.js 13: const token = searchParams.get('token');
    
    if (token) {
      // 토큰 저장
      saveToken(token);
      
      // 토큰 파라미터 제거하고 홈 화면으로 리디렉션
      router.replace('/');
    }
  }, [router]);
  
  return <div>인증 처리 중...</div>;
};

export default GoogleAuthHandler; 